1. random模块
random模块介绍：
random模块实现了一个伪随机数生成器，可用来生成随机数以及完成与随机数相关的功能。下面我们来介绍下该模块下常用的几个函数：

函数名	描述
random.random()	用于生成半开区间[0, 1.0)内的一个随机浮点数
random.uniform(a, b)	用于生成一个指定范文内[a, b]的随机浮点数
random.randint(a, b)	用于生成一个指定范围内[a, b]的整数
random.randrange(start, stop[, step])	用于从指定范围内[start, stop)，按指定基数step递增的集合中获取一个随机数，step默认值为1。
random.randrange(stop)	等价于random.randrange(0, stop)
random.choice(seq)	从指定序列seq中随机获取一个元素
random.sample(population, k)	从指定序列中随机获取k个不重复的元素，并以列表形式返回，用于不进行内容替换的随机抽样。
random.shuffle(x[, random])	用于随机打乱一个列表中元素，需要注意的是该函数操作的是列表对象，且没有返回值。
说明：

1）random.sample(population, k)只有在population中没有重复元素的情况下获取到的随机抽样结果才会有相同的元素；
2）其实上面这些函数都是基于random.random()这个基础函数实现的；
3）官方文章中有声明，该模块完全不适合用作数据加密。






random模块实例：
import random

print("random.random(): ", random.random())
print("random.uniform(10, 20): ", random.uniform(10, 20))
print("random.randint(10, 20): ", random.randint(10, 20))
print("random.randrange(10, 20, 2): ", random.randrange(10, 20, 2))
print("random.choice('abcd1234'): ", random.choice('abcd1234'))
print("random.sample('abcd1234', 3): ", random.sample('abcd1234', 3))
print("random.sample('abcd1234', 3): ", random.sample('abcd1234', 3))
print("random.shuffle([1, 2, 3, 4, 5, 6]): ", random.shuffle([1, 2, 3, 4, 5, 6]))
list = [1, 2, 3, 4, 5, 6]
random.shuffle(list)
print("random.shuffle([1, 2, 3, 4, 5, 6]): ", list)
输出结果：

('random.random(): ', 0.2967959697940342)
('random.uniform(10, 20): ', 10.774070602657055)
('random.randint(10, 20): ', 18)
('random.randrange(10, 20, 2): ', 18)
("random.choice('abcd1234'): ", 'd')
("random.sample('abcd1234', 3): ", ['d', '1', '4'])
("random.sample('abcd1234', 3): ", ['d', 'd', 'd'])
('random.shuffle([1, 2, 3, 4, 5, 6]): ', None)
('random.shuffle([1, 2, 3, 4, 5, 6]): ', [5, 1, 2, 4, 3, 6])

再次说明，random.shuffle()的函数没有返回结果，且其操作的参数必须是一个列表对象。


