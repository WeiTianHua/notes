

1. pip3 install MyQR
		MyQR是基于python3的第三方库，python2可能不能正常运行
		
2.简单例子
	from MyQR import myqr 
	myqr.run(‘https://www.baidu.com’)
	会在当前目录下生产一个二维码图片
	
3. 下面我们来详细的讲解一下 myqr.run() 函数里面的参数
参数	                     含义	                                             详细
word	        二维码指向链接	          str， 输入链接或者句子作为参数
version	       边长	            int，控制边长，范围是1到40，数字越大边长越大,默认边长是取决于你输入的信息的长度和使用的纠错等级
level	           纠错等级	    str，控制纠错水平，范围是L、M、Q、H，从左到右依次升高，默认纠错等级为’H’
picture	       结合图片	    str，将QR二维码图像与一张同目录下的图片相结合，产生一张黑白图片
colorized	  颜色	            bool，使产生的图片由黑白变为彩色的
contrast	  对比度	        float，调节图片的对比度，1.0 表示原始图片，更小的值表示更低对比度，更大反之。默认为1.0
brightness 亮度	            float，调节图片的亮度，其余用法和取值与 contrast 相同
save_name输出文件名     	str，默认输出文件名是”qrcode.png”
save_dir	 存储位置   	    str，默认存储位置是当前目录


4.黑白图片二维码
	让我们将这张图加入到我们的二维码中，加入过程需要在参数里指定图片的地址，
	我们也要设置新图片的保存名，以免和上一张二维码图片冲突。

from MyQR import myqr
myqr.run(
    words='https://www.baidu.com',
    picture="Sources\圣诞帽 嘤嘤嘤.png",
    save_name='artiistlc.png'
)

5. 实现彩色也非常简单，在参数里将 colorized 参数值设为 True。

from MyQR import myqr
myqr.run(
    words='https://www.baidu.com',
    picture="Sources\圣诞帽 嘤嘤嘤.png",
    colorized=True,
    save_name='artiistlc_color.png'
)

6. 动态二维码 
	在这里，我们使用GIF格式图片！
	在生成动态二维码的过程中，值得注意的一点是，我们生成保存的文件也必须是.gif 格式哟。

from MyQR import myqr
myqr.run(
    words='https://www.baidu.com',
    picture="Sources\gakki.gif",
    colorized=True,
    save_name='animated.gif'
)










