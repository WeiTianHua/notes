import json     #json 模块

numbers = int list str float True dict 
with open("wei.json","w") as f:
    json.dump(numbers,f)        #只能写入可序列化类型,set不行,bytes不行
    #写入不带换行符
    print('good')               #tuple　会被转化为列表
                                #None   会被转化为　null
with open('wei.json') as f:
    numbers = json.load(f)      #除了tuple和None  其它原格式转回
    print(numbers)
    print(isinstance(0,None))       #isinstance()不能放空类型
	


dumps()方法返回一个str，内容就是标准的JSON。类似的，dump()方法可以直接把JSON写入一个file-like Object。

要把JSON反序列化为Python对象，用loads()或者对应的load()方法，前者把JSON的字符串反序列化，
后者从file-like Object中读取字符串并反序列化

对象序列化，dumps默认参数default=传入对象，返回对象属性字典的函数
js = json.dumps(s, default=lambda s: s.__dict__)

反序列化 后创建对象
def dict2student(d):
    return Student(d['name'], d['age'], d['score'])
obj = json.loads(json_str, object_hook=dict2student）